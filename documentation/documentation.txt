




Proiect ISW

 
 
 
  	
 
 
 
Universitatea Transilvania din Brașov 
Facultatea de Inginerie Electrică și Știința Calculatoarelor 
Calculatoare, grupa 4LF791
 
Nume studenți
Stelea Alexandru-Vasile 
Sava Andrei-Cristian 
Tănase Radu  
Tăbăcaru Ștefan 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















Abrevieri



UML - Unified Modelling Language
IDE  - Integrated Development Environment






































Scurtă descriere a proiectului 


“A penny saved is a penny earned” [1]
 
            	Zi de zi facem cheltuieli cât mai diverse. De la hrană, chirie și utilități până la distracții, vacanțe și diferite plăceri. Dar ce se întâmplă în momentul în care cheltuielile devin mai mari decât veniturile? Aici intervine Spendings Tracker, o aplicație web care a fost creată cu scopul de a analiza cheltuielile dintr-o anumită perioadă de timp. Astfel, utilizatorii acesteia vor avea posibilitatea de a vedea pe ce sunt cheltuiți cei mai mulți bani, iar ulterior pot lua acțiuni pentru eficientizarea acestora. Spendings Tracker propune o metodă ușoară și interactivă de a ține evidența cheltuielilor ca într-un final să putem salva bani zilnic. Aplicația web cuprinde mai multe funcționalități care vin în sprijinul utilizatorilor. Aceștia au un cont, pot adăuga cheltuieli, le pot vizualiza în diferite monede și pot observa câteva statistici bazate pe acestea.
 
 
Cerințe funcționale. Utilitatea proiectului

Front-end (aplicație web): 
Views 
Main page 
Sign In 
Sign Up 
Statistics 
Account  
Timeline 
View Spending 
Add Spending 
Change currency 
Elemente grafice specifice temei 
 
Back-end: 
Procesul de Sign In/Sign Up 
Salvare spendings 
Add spendings 
Delete spendings 
View spending by day 
Statistics 
Change currency 
Filtrare spendings

Utilitatea proiectului constă, în mare parte, în posibilitatea de a folosi zilnic aplicația web pentru a centraliza toate cheltuielile pentru a fi salvate într-o bază de date cu ajutorul căreia ulterior pot fi vizualizate simplu prin câteva click-uri. De asemenea, utilizatorul are acces la câteva statistici pe baza cărora își poate analiza fluxul banilor. 
Etapele de realizare a proiectului

Formarea echipei 
Brainstorming de idei de proiecte 
Alegere proiect 
Definire roluri în cadrul proiectului 
Alegere platformă project management 
Stabilire task-uri  
Realizarea diagramelor UML 
Realizare Mock-ups pentru partea de front-end 
Stabilirea tehnologiilor cu care se va lucra
Îndeplinire taskuri
Testarea produsului
Creare documentație
Prezentare proiect

Modalități de organizare a activității (management)

Pentru gestionarea activității din cadrul echipei s-a utilizat platforma Meister Task [2] la îndrumarea domnului profesor de la laborator. În cadrul aplicației am divizat task-urile sub patru categorii, acestea fiind:
Open (task-urile care urmau a fi asignate unuia dintre membrii echipei);
Working (task-urile asupra cărora se lucra și care erau asignate unuia sau mai multor membrii ai echipei);
Review (task-urile care au fost finalizate, dar trebuiau analizate din punct de vedere al modului în care au fost duse la bun sfârșit);
Done (task-urile finalizate trecute prin faza de Review).

Utilizarea platformei Meister Task a ajutat la buna desfășurare a procesului de Project Management, deoarece toate atribuțiile fiecăruia au fost centralizate, iar task-urile au fost divizate într-un mod benefic.
În figura de mai jos se poate observa simplitatea platformei utilizate. Pe pagina principală apar toate detaliile de care avem nevoie, nefiind necesară accesarea mai multor pagini. După cum se poate observa în imagine, am creat și o categorie de “Tehnologies” cu scopul de a defini de la început tehnologiile utilizate în crearea aplicației.


[Figura 1.]

De asemenea, în cadrul echipei a fost creat și un grup pe aplicația WhatsApp cu scopul eficientizării comunicării dintre membrii echipei. 


Distribuția lucrului din cadrul echipei

În cadrul echipei, fiecare membru s-a ocupat de partea de developing a produsului, dar în același timp, au existat și roluri separate pentru fiecare. Distribuția rolurilor este:

Stelea Alexandru-Vasile - Developer și Project Manager
Tănase Radu - Developer și Unit Tester
Sava Andrei-Cristian - Developer și Unit Tester
Tăbăcaru Ștefan - Developer și Documentație

Date referitoare la efortul de cercetare și documentare

De-a lungul procesului de creare a aplicației web, au existat mai multe perioade în care a fost necesară o documentare și cercetare asupra tehnologiilor utilizate, cât și a modului de soluționare a problemelor apărute. Sursa principală de documentare a fost internetul prin intermediul căruia s-au documentat aspecte precum: unit testing, modul de lucru cu tehnologiile Flask, Flask LogIn, dar și cum să lucrăm cu aceste tehnologii și limbajele de programare utilizate pe partea de Front-End: CSS, HTML și Javascript.
De asemenea, prin cadrul internetului s-au utilizat biblioteci și anumite utilitare indispensabile pentru proiect, precum:
Fonturile - Google Fonts Api [3]
Avatarele utilizatorilor aplicației -  Freepik[4]
Graficele din pagina de statistici - Chart JS[5]
Pictogramele utilizate în cadrul aplicației - FontAwesome[6]
Utilitar de gestionare a e-mailurilor trimise utilizatorilor - Mail JS[7]
Biblioteci din cadrul Python și Flusk
Utilitar de gestionare a lucrului cu e-mailuri - Post Mail[8]
Librăria Jquery din Javascript[9]
Librăria DateRange Picker pentru lucrul cu calendare[10]

Estimări inițiale pentru complexitatea proiectului și termenul de livrare

Inițial, complexitatea proiectului nu a părut atât de mare în raport cu nivelul de cunoștințe al echipei și cu experiența ulterioară. Însă, pe parcurs au apărut probleme asupra cărora a fost nevoie de o atenție mai mare pentru a se atinge scopul final. De asemenea, pe parcurs au mai fost adăugate funcționalități, urmând ca acestea să fie implementate ulterior, ceea ce a mărit într-o oarecare măsură nivelul de complexitate al proiectului. 
Termenul de livrare propus de echipă a fost depășit cu aproximativ două săptămâni, dar termenul final de livrare din cadrul laboratorului a fost respectat, proiectul realizându-se mai repede decât data stabilită de către domnul profesor.


Arhitectura generală a proiectului

În figura 2 poate fi observată diagrama de activitate care definește modul de funcționare al aplicației. 
Inițial avem utilizatorul care încearcă să se autentifice în aplicație. Dacă datele introduse de acesta nu sunt corecte, va primi un mesaj de eroare și va fi întors către procesul de autentificare. Dacă datele de logare sunt corecte, acesta va avea acces la datele din contul său care cuprind funcționalitățile:
Vizualizare cheltuieli
Ștergere cheltuială
Editare cheltuială
Adăugarea unei noi cheltuieli
Actualizare cheltuieli

În figura 3 se poate observa arhitectura generală a proiectului. În centru se observă partea de Backend cu cele șase Endpoint-uri:
LogIn User
LogOut User
Insert Spending Data
Delete Spending Data
Modify Spending Data
Get Average Spending.
De asemenea, partea de backend cuprinde și trei funcții: convertire cheltuială în euro, formatare dată și ora și calculare cheltuială medie.
În partea din stânga se observă o diagramă a bazei de date, iar partea din dreapta cuprinde aria de Front-end cu codul scris în HTML, CSS și funcțiile din Javascript:
Send entered spending data to the backend
Send modified spending data to backend
Request average for a given timeframe
Request spending deletion
Request LogOut.



[Figura 2.]






[Figura 3.]



Instrumente de dezvoltare utilizate

Aplicații pentru facilitarea scrierii de cod

Pentru scrierea codului s-au utilizat diferite IDEuri, dar și aplicații de editare text specifice dezvoltatorilor de produse software.De asemenea s-a utilizat și aplicații pentru facilitarea creării și gestionării bazei de date. Acestea sunt:
Visual Studio
pgAdmin 
Jupyter

Tehnologii utilizate
În cadrul dezvoltării proiectului s-au utilizat următoarele tehnologii și limbaje de programare:
Flask
Flask LogIn
CSS
HTML
Javascript
Rest API
PostgreSQL DB

Pentru dezvoltarea produsului nu au fost necesare achiziționarea de licențe pentru utilitarele folosite în crearea acestuia.
Versionarea codului și arhivarea produsului

Pentru versionarea codului s-a utilizat GitHub [11]. Fiecare membru al echipei a utilizat platforma, iar codul este arhivat acolo.
În figura 4 se poate observa branch-ul Master al proiectului.


[Figura 4.]


Ghid minimal de utilizare a produsului software dezvoltat

Primul pas este autentificarea în contul de utilizator sau crearea unui nou cont.

[Figura 5.]

Ulterior, utilizatorul își poate accesa pagina contului său unde poate vedea avatarul, cea mai mare cheltuială, suma tuturor cheltuielilor, cât și date despre cont.


[Figura 6.]


În pagina principală a aplicației, utilizatorul poate selecta anul, luna și ziua pentru care dorește să vizualizeze cheltuielile. De asemenea, poate adăuga, șterge sau edita cheltuieli. Acesta are și opțiunea de a schimba moneda în care vizualizează cheltuielile (din meniul din dreapta sus. Monedele sunt: EUR, RON, USD, GBP), cât și opțiunea de a vedea statistici despre cheltuielile acestuia. Nu în ultimul rând, acesta își poate filtra cheltuielile afișate în funcție de categorie.


[Figura 7.]


În meniul de statistici, utilizatorul poate alege ce tip de grafic dorește, selectează perioada, iar aplicația îi afișează un grafic. 


[Figura 8.]

Cerințe pentru utilizarea produsului software

Utilizatorul nu are nevoie decât de un PC și o conexiune la internet pentru ca acesta să poată utiliza aplicația.


Modalități de testare a produsului dezvoltat

În procesul de testare a produsului, s-a lucrat cu unit testing pentru a testa diferite funcționalități ale aplicației. Mai jos se poate observa codul pentru unit tests.

[Figura 9.]

Observații generale și direcții de viitor

Deși aplicația nu este una foarte complexă, acesta are un potențial de dezvoltare. În cadrul echipei s-au discutat mai multe funcționalități care ar putea fi dezvoltate ulterior. Deși s-au întâmpinat anumite probleme în dezvoltarea produsului, faptul că acesta are o finalitate și munca echipei se poate vedea reprezintă dezvoltare pentru fiecare membru și, implicit, potențial de exploatare a acestui lucru în viitoare funcționalități ce ar putea fi adăugate proiectului Spendings Tracker.


Concluzii referitoare la atingerea obiectivului propus

Termen de livrare

Termenul inițial de livrare stabilit de echipă nu a fost complet respectat datorită anumitor probleme apărute pe parcurs în dezvoltarea proiectului. În același timp, au fost și funcționalități adăugate pe parcurs, iar acest lucru a îngreunat atingerea obiectivului inițial legat de termenul de livrare. Totuși, termenul de livrare stabilit în cadrul laboratorului a fost respectat, ceea ce reprezintă o realizare în cadrul echipei, având în vedere dificultățile întâmpinate pe parcurs.

Know-how câștigat

Cu siguranță fiecare membru al echipei a avut lucruri de învățat de-a lungul procesului de dezvoltare a proiectului. Deși unii membrii cunoșteau tehnologiile utilizate, aceștia au întâmpinat provocări care i-au ajutat să se dezvolte din punct de vedere al cunoștințelor despre tehnologiile în cauză. De asemenea, membrii echipei cu mai puțină experiență au avut ocazia să lucreze într-un proiect real care i-a pregătit într-o oarecare măsură de munca din cadrul companiei, mai ales prin prisma utilizarea unor utilitare de project management.

Idei de îmbunătățire a procesului de dezvoltare pe viitor

O soluția la problemele care au fost întâmpinate de-a lungul dezvoltării proiectului poate fi documentarea mai amplă despre anumite funcționalități și modul lor de implementare înainte de dezvoltarea în sine.





































Bibliografie


References
(n.d.). Chart.js | Open source HTML5 Charts for your website. Retrieved January 13, 2023, from https://www.chartjs.org/
(n.d.). EmailJS. Retrieved January 13, 2023, from https://www.emailjs.com/
(n.d.). Send email from JavaScript or static HTML without backend code. Retrieved January 13, 2023, from https://postmail.invotes.com/
(n.d.). jQuery. Retrieved January 13, 2023, from https://jquery.com/
(n.d.). Date Range Picker — JavaScript Date & Time Picker Library. Retrieved January 13, 2023, from https://www.daterangepicker.com/
Franklin, B. (1737). A penny saved is a penny earned. forbes.com. Retrieved Ianuarie 10, 2023, from https://examples.yourdictionary.com/articles/who-said-a-penny-saved-is-a-penny-earned.html
Gandy, D. (2016, October 24). font-awesome. npm. Retrieved January 13, 2023, from https://www.npmjs.com/package/font-awesome
GitHub. (2023, January 6). GitHub. Retrieved January 13, 2023, from https://github.com/alexandruvstelea/SpendingsTracker
Google Fonts. (n.d.). Google Developers. Retrieved January 13, 2023, from https://developers.google.com/fonts
Meister Task. (n.d.). Meister Task. Retrieved January 13, 2023, from https://www.meistertask.com/app/
Profile Avatar Images - Free Download on Freepik. (n.d.). Freepik. Retrieved January 13, 2023, from https://www.freepik.com/free-photos-vectors/profile-avatar

